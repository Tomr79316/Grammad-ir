# Copyright (C) 2003, 2004 Kevin P. Scannell <scannell@slu.edu>
#
# This is free software; see the file COPYING for copying conditions.  There is
# NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

SHELL = /bin/sh

.SUFFIXES: .in .pl

# general configuration
ECHO = !ECHO!
EGREP = !EGREP!
LN_S = !LN_S!
PERL = !PERL!

# package configuration
GRAMDIR = !GRAMDIR!
TEANGA = !TEANGA!
UPPERTEANGA = !UPPERTEANGA!
NAME_ENG = !NAME_ENG!
VERSION = !VERSION!
GRAMVERSION = !GRAMVERSION!
PACKAGE_NAME = gramadoir-$(TEANGA)
TARBALL = gramadoir-$(TEANGA)-$(VERSION)
PERLVERSION = $(VERSION)
PERLD = Lingua-$(UPPERTEANGA)-Gramadoir
PERLDOK = tree_ok
PERLLIB = $(PERLD)/lib/Lingua/$(UPPERTEANGA)/Gramadoir
SHARE = $(PERLD)/share
NATIVE = !NATIVE!
BDCHARS = !BDCHARS!
INTCHARS = !INTCHARS!
CAPITALS = !UPPERS!
LOWERS = !LOWERS!
AUTHOR = !AUTHOR!

# targets '
SCRIPTNAME = gram-${TEANGA}.pl
DEVSCRIPTNAME = gramdev-${TEANGA}.pl
OOSCRIPTNAME = groo-$(TEANGA).pl
PERLTOP = $(PERLD)/Changes $(PERLD)/Makefile.PL $(PERLD)/MANIFEST $(PERLD)/MANIFEST.SKIP $(PERLD)/README
PERLCODE = $(PERLD)/scripts/$(SCRIPTNAME) $(PERLLIB).pm $(PERLD)/scripts/$(OOSCRIPTNAME)
LEXICONS = $(SHARE)/3grams.bs $(SHARE)/earraidi.bs $(SHARE)/eile.bs $(SHARE)/focail0.bs $(SHARE)/nocombo.bs $(SHARE)/pos.bs $(SHARE)/morph.bs
EXTRAS = $(SHARE)/gramadoir.el $(SHARE)/gramadoir.vim $(SHARE)/gramadoir.sxw
TESTS = $(PERLD)/t/$(PERLD).t
LOCALES = locale_ok $(PERLLIB)/Languages.pm $(PERLLIB)/Languages/en_us.pm
INTERMEDIATE = aonchiall-$(TEANGA).pl comhshuite-$(TEANGA).pl eisceacht-$(TEANGA).pl giorr-$(TEANGA).pl rialacha-$(TEANGA).pl unigram-$(TEANGA).pl
HASHDIR = ${PERLD}/lib/Lingua/${UPPERTEANGA}/Gramadoir

all : perldistfiles $(DEVSCRIPTNAME)

$(PERLDOK) :
	mkdir ${PERLD}
	mkdir ${PERLD}/lib
	mkdir ${PERLD}/lib/Lingua
	mkdir ${PERLD}/lib/Lingua/${UPPERTEANGA}
	mkdir ${PERLD}/lib/Lingua/${UPPERTEANGA}/Gramadoir
	mkdir ${PERLD}/lib/Lingua/${UPPERTEANGA}/Gramadoir/Languages
	mkdir ${PERLD}/scripts
	mkdir ${PERLD}/share
	mkdir ${PERLD}/t
	touch $(PERLDOK)

perldistfiles : $(PERLTOP) $(PERLCODE) $(LEXICONS) $(EXTRAS) $(TESTS) $(LOCALES)

perldb : FORCE $(PERLDOK)
	(cd $(PERLD); if [ -e Makefile ]; then make distclean; fi)
	$(MAKE) perl

perl : perldistfiles $(PERLD)/Makefile
	(cd $(PERLD); make)

$(PERLD)/Makefile : $(PERLD)/Makefile.PL $(LEXICONS)
	(cd $(PERLD); $(PERL) Makefile.PL)

Makefile : $(GRAMDIR)/Makefile-xx.in configure
	./configure

test : perl
	(cd $(PERLD); make test)

install : perl
	(cd $(PERLD); make pure_install)

installcheck : triail FORCE
	@LC_ALL=ga_IE $(SCRIPTNAME) --api --iomlan --aspell triail > triail.tmp.xml
	@if diff triail.xml triail.tmp.xml; then $(ECHO) 'OK.'; else $(ECHO) 'Problem.'; fi
	@rm -f triail.tmp.xml

lexicon-$(TEANGA).txt : lexicon-$(TEANGA).bs
	cat lexicon-$(TEANGA).bs | LC_ALL="C" $(PERL) $(GRAMDIR)/cabhair.pl -d --encoding=$(NATIVE) > $@

$(PERLD)/Changes : Changes $(PERLDOK)
	cp -f Changes $@
	chmod 644 $@

$(PERLD)/Makefile.PL : $(GRAMDIR)/Makefile.PL.in $(PERLDOK)
	cat $(GRAMDIR)/Makefile.PL.in | sed "s/@TEANGA@/$(UPPERTEANGA)/g; s/@LOWERTEANGA@/$(TEANGA)/g" | \
	if $(ECHO) "$(NATIVE)" | $(EGREP) -i 'utf' > /dev/null; \
	then \
		sed '/#.*binmode/s/#//g'; \
	else \
		sed '/^#.*binmode/d'; \
	fi > $@
	chmod 644 $@

$(PERLD)/MANIFEST : $(GRAMDIR)/MANIFEST $(PERLDOK)
	cat $(GRAMDIR)/MANIFEST | sed "s/@TEANGA@/$(TEANGA)/; s/@UPPERTEANGA@/$(UPPERTEANGA)/" > $@
	chmod 644 $@

$(PERLD)/MANIFEST.SKIP : $(GRAMDIR)/MANIFEST.SKIP $(PERLDOK)
	cp -f $(GRAMDIR)/MANIFEST.SKIP $@
	chmod 644 $@

$(PERLD)/META.yml : perl
	(cd $(PERLD); make metafile)

$(PERLD)/README : $(GRAMDIR)/README.perl $(PERLDOK)
	sed "s/@UPPERTEANGA@/$(UPPERTEANGA)/; s/@TEANGA@/$(TEANGA)/; s/@VERSION@/$(VERSION)/; s/@GRAMVERSION@/$(GRAMVERSION)/; s/@NAME_ENG@/$(NAME_ENG)/" $(GRAMDIR)/README.perl | LC_ALL="C" $(PERL) -p -e 's/(.*)/$$1\n                   $(AUTHOR)/ if m/^Copyright \(C\)/;' > $@
	chmod 644 $@

$(PERLD)/scripts/$(SCRIPTNAME) : $(GRAMDIR)/gram.pl $(PERLDOK)
	cat $(GRAMDIR)/gram.pl | sed "s/@SCRIPTNAME@/$(SCRIPTNAME)/; s/@PACKAGE_VERSION@/$(PERLVERSION)/; s/@TEANGA@/$(UPPERTEANGA)/g; s/@NATIVE@/$(NATIVE)/g; s/@NAME_ENGLISH@/$(NAME_ENG)/g" | LC_ALL="C" $(PERL) -p -e 's/(.*)/$$1\n                   $(AUTHOR)/ if m/^Copyright \(C\)/;' > $@
	chmod 644 $@

$(PERLD)/scripts/$(OOSCRIPTNAME) : $(GRAMDIR)/OOo/groo.pl $(PERLDOK)
	cat $(GRAMDIR)/OOo/groo.pl | sed "s/@SCRIPTNAME@/$(SCRIPTNAME)/; s/@TEANGA@/$(UPPERTEANGA)/g; s/@LOWERTEANGA@/$(TEANGA)/g; s/@NAME_ENGLISH@/$(NAME_ENG)/g" | LC_ALL="C" $(PERL) -p -e 's/(.*)/$$1\n                   $(AUTHOR)/ if m/^Copyright \(C\)/;' > $@
	chmod 644 $@

$(SHARE)/3grams.bs : 3grams-$(TEANGA).txt $(PERLDOK)
	cp 3grams-$(TEANGA).txt $@
	chmod 644 $@
	rm -f $(HASHDIR)/3grams.hash $(PERLD)/Makefile

$(SHARE)/earraidi.bs : earraidi-$(TEANGA).bs $(PERLDOK)
	cp earraidi-$(TEANGA).bs $@
	chmod 644 $@
	rm -f $(HASHDIR)/earraidi.hash $(PERLD)/Makefile

$(SHARE)/eile.bs : eile-$(TEANGA).bs $(PERLDOK)
	cp eile-$(TEANGA).bs $@
	chmod 644 $@
	rm -f $(HASHDIR)/eile.hash $(PERLD)/Makefile

$(SHARE)/nocombo.bs : nocombo-$(TEANGA).txt $(PERLDOK)
	cp nocombo-$(TEANGA).txt $@
	chmod 644 $@
	rm -f $(HASHDIR)/nocombo.hash $(PERLD)/Makefile

$(SHARE)/pos.bs : pos-$(TEANGA).txt $(PERLDOK)
	cp pos-$(TEANGA).txt $@
	chmod 644 $@
	rm -f $(HASHDIR)/pos.hash $(PERLD)/Makefile

$(SHARE)/morph.bs : morph-$(TEANGA).txt $(PERLDOK)
	cp morph-$(TEANGA).txt $@
	chmod 644 $@
	rm -f $(HASHDIR)/morph.hash $(PERLD)/Makefile

$(SHARE)/gramadoir.el : $(GRAMDIR)/gramadoir.el $(PERLDOK)
	sed "s/gram-ga\.pl/$(SCRIPTNAME)/g" $(GRAMDIR)/gramadoir.el > $@

$(SHARE)/gramadoir.vim : $(GRAMDIR)/gramadoir.vim $(PERLDOK)
	sed "s/gram-ga\.pl/$(SCRIPTNAME)/g" $(GRAMDIR)/gramadoir.vim > $@

$(SHARE)/gramadoir.sxw : $(GRAMDIR)/OOo/gramadoir.sxw $(PERLDOK)
	cp -f $(GRAMDIR)/OOo/gramadoir.sxw $@

$(PERLD)/t/$(PERLD).t : $(GRAMDIR)/Lingua-XX-Gramadoir.t triail triail.xml $(PERLDOK)
	cat $(GRAMDIR)/Lingua-XX-Gramadoir.t | sed "s/@TEANGA@/$(UPPERTEANGA)/g; s/@NATIVE@/$(NATIVE)/g; s/tests => 1;/tests => 4+`cat triail.xml | wc -l | sed 's/^ *//'`;/" | sed "/<<.EOF.;/r triail" | sed "/<<.RESEOF.;/r triail.xml" > $@
	chmod 644 $@

triail : rialacha-$(TEANGA).in
	sed -n '/^#\./{s/^#\. //; p;}' rialacha-$(TEANGA).in > triail

triail.xml-update : FORCE
	$(MAKE) triail
	$(MAKE) perl
	rm -f triail.xml
	$(PERL) -I $(PERLD)/lib $(PERLD)/scripts/$(SCRIPTNAME) --api --iomlan --aspell --comheadan=ga triail > triail.xml

# last line (subst of \x{} codes) is a hack for legacy encodings w/ 5.8.0
$(PERLLIB).pm : $(GRAMDIR)/Gramadoir.pm.in $(INTERMEDIATE) $(PERLDOK)
	sed "/^# aonchiall code /r aonchiall-$(TEANGA).pl" $(GRAMDIR)/Gramadoir.pm.in | sed "/^# comhshuite code /r comhshuite-$(TEANGA).pl" | sed "/^# eisceacht code /r eisceacht-$(TEANGA).pl" | sed "/^# giorr code /r giorr-$(TEANGA).pl" | sed "/^# rialacha code /r rialacha-$(TEANGA).pl" | sed "/^# unigram code /r unigram-$(TEANGA).pl" | \
	sed "s/@PACKAGE_VERSION@/$(PERLVERSION)/; s/@TEANGA@/$(UPPERTEANGA)/g; s/@NAME_ENGLISH@/$(NAME_ENG)/g; s/@NATIVE@/$(NATIVE)/g; s/@BDCHARS@/$(BDCHARS)/g; s/@INTCHARS@/$(INTCHARS)/g; s/@CAPITALS@/$(CAPITALS)/g; s/@LOWERS@/$(LOWERS)/g;" | LC_ALL="C" $(PERL) -p -e 's/(.*)/$$1\n                   $(AUTHOR)/ if m/^Copyright \(C\)/;' | sed '/^# [a-z]* code goes here/d' > $@
	if $(ECHO) "$(NATIVE)" | $(EGREP) -i 'utf' > /dev/null; \
	then \
		LC_ALL="C" $(PERL) -i -p -e 'if (m/^use warnings/) {s/(.*)/$${1}\nuse utf8;/;} if (m/decode\(/) {s/^/#/;} if (m/eval.*from_to/) {s/^(.*from_to\(([^,]+), *([^,]+),.*)/#$${1}\n\teval {$$2 = decode($$3, $$2) };/}' $@; \
	else \
		LC_ALL="C" $(PERL) -i -p -e 's/([\x{80}-\x{ff}])/sprintf("\\x{%x}",ord($$1));/ge;' $@; \
	fi
	chmod 644 $@

$(PERLLIB)/Languages.pm : $(GRAMDIR)/Languages.pm $(PERLDOK)
	sed "s/@TEANGA@/$(UPPERTEANGA)/g" $(GRAMDIR)/Languages.pm > $@

$(PERLLIB)/Languages/en_us.pm : $(GRAMDIR)/Languages-en_us.pm $(PERLDOK)
	sed "s/@TEANGA@/$(UPPERTEANGA)/g" $(GRAMDIR)/Languages-en_us.pm > $@

locale_ok : $(PERLDOK)
	cat $(GRAMDIR)/po/LINGUAS | tr " " "\n" | $(EGREP) '[a-z]' | \
	while read x; \
	do \
		sed -n '1,/^"Content-Transfer-Encoding/{/^[^#]/s/^/#/; p;}' $(GRAMDIR)/po/$${x}.po > pometa.txt; \
		LC_ALL="C" $(PERL) $(GRAMDIR)/po2perl.pl $(GRAMDIR)/po/$${x}.po "$${x}" | iconv -f `$(EGREP) '^"Content-Type:' $(GRAMDIR)/po/$${x}.po | sed 's/^.*charset *= *\([^ ]*\)\\\n.*/\1/'`  -t utf-8 | sed "/^package/r pometa.txt" | sed "s/@TEANGA@/$(UPPERTEANGA)/g" > $(PERLLIB)/Languages/$${x}.pm; \
		rm -f pometa.txt; \
	done
	touch locale_ok

.in.pl :
	cat "$<" | LC_ALL="C" $(PERL) $(GRAMDIR)/gin.meta.pl `sed -n '/<[A-Z] /{s/^[0-9]* <\([A-Z]\).*/\1/; p;}' pos-$(TEANGA).txt | sort -u | tr -d "\n"` | LC_ALL="C" $(PERL) -p macra-${TEANGA}.meta.pl | LC_ALL="C" $(PERL) -p $(GRAMDIR)/`$(ECHO) $< | sed 's/-.*//'`.meta.pl | sed 's/^/\t/' > $@

giorr-$(TEANGA).pl : giorr-$(TEANGA).txt giorr-$(TEANGA).pre
	(cat giorr-$(TEANGA).pre | $(EGREP) '^s/' | sed 's/^/\t/'; cat giorr-$(TEANGA).txt | sed 's/ .*//' | sed 's/.*/\ts\/([^@BDCHARS@@INTCHARS@]&)\\.\/$$1$$NOBD.\/g;/') > $@

unigram-$(TEANGA).pl : unigram-$(TEANGA).pre unigram-$(TEANGA).txt
	(cat unigram-$(TEANGA).pre | $(EGREP) '^s/' | sed 's/^/\t/'; cat unigram-$(TEANGA).txt | sed 's/^\(<\([A-Z]\)[^>]*\)>/\ts\/<B><Z>(?:<[^>]*>)*\1.>(?:<[^>]*>)*<\\\/Z>([^<]+)<\\\/B>\/\1>$$1<\\\/\2>\/g;/') > $@

$(SHARE)/focail0.bs : lexicon-$(TEANGA).txt freq-$(TEANGA).txt $(PERLDOK)
	cat lexicon-$(TEANGA).txt | LC_ALL="C" $(PERL) $(GRAMDIR)/count.pl freq-$(TEANGA).txt | LC_COLLATE=C sort -n -r > lex.txt
	rm -f lexicon?.txt
	egrep '^0' lex.txt | sed 's/^0 //' > lexicon6.txt
	egrep '^1 ' lex.txt | sed 's/^1 //' > lexicon5.txt
	cat lex.txt | sed '/^[01] /d' | sed 's/^[0-9]* //' | LC_ALL="C" $(PERL) $(GRAMDIR)/lexbuild
	for FILENUM in 0 1 2 3 4 5 6; \
	do \
		cat lexicon$${FILENUM}.txt | LC_COLLATE=C sort -u -k1,1 -k2,2n | $(GRAMDIR)/cabhair.pl --compress --encoding=$(NATIVE) > $(SHARE)/focail$${FILENUM}.bs; \
	done
	rm -f lexicon?.txt lex.txt
	chmod 644 $(SHARE)/focail?.bs
	rm -f $(HASHDIR)/focail*.hash $(PERLD)/Makefile

$(DEVSCRIPTNAME) : $(GRAMDIR)/gramdev.pl
	cat $(GRAMDIR)/gramdev.pl | sed "s/@SCRIPTNAME@/$(DEVSCRIPTNAME)/; s/@PACKAGE_VERSION@/$(PERLVERSION)/; s/@TEANGA@/$(UPPERTEANGA)/g; s/@NATIVE@/$(NATIVE)/g; s/@NAME_ENGLISH@/$(NAME_ENG)/g; s/@BDCHARS@/$(BDCHARS)/; s/@INTCHARS@/$(INTCHARS)/" | LC_ALL="C" $(PERL) -p -e 's/(.*)/$$1\n                   $(AUTHOR)/ if m/^Copyright \(C\)/;' > $@
	if $(ECHO) "$(NATIVE)" | $(EGREP) -i 'utf' > /dev/null; \
	then \
		LC_ALL="C" $(PERL) -p -i -e 's/(.*)/$$1\nuse utf8;/ if m/^use warnings/;' $@; \
	else \
		LC_ALL="C" $(PERL) -i -p -e 's/([\x{80}-\x{ff}])/sprintf("\\x{%x}",ord($$1));/ge;' $@; \
	fi
	chmod 755 $@

poncin : FORCE
	@cd $(GRAMDIR) && make parsers
	@$(ECHO) 'Checking aonchiall-$(TEANGA).in'
	@cat aonchiall-$(TEANGA).in | $(GRAMDIR)/aparser
	@$(ECHO) 'Checking eisceacht-$(TEANGA).in'
	@cat eisceacht-$(TEANGA).in | $(GRAMDIR)/eparser
	@$(ECHO) 'Checking rialacha-$(TEANGA).in'
	@cat rialacha-$(TEANGA).in | $(GRAMDIR)/rparser

topclean :
	rm -f $(INTERMEDIATE) *.tar.gz *.zip triail $(DEVSCRIPTNAME)

# lexicon-xx.txt is treated like a distributed file even though it's not
distclean :
	$(MAKE) clean
	$(MAKE) lexicon-$(TEANGA).txt  # this line and next ensure .bs is OK
	$(MAKE) rebuildlex
	rm -f Makefile $(PERLDOK) lexicon-$(TEANGA).txt
	rm -fR $(PERLD)

clean :
	if [ -e $(PERLD)/Makefile ]; then (cd $(PERLD);  make distclean); fi
	$(MAKE) topclean
	rm -f $(PERLTOP) $(PERLCODE) $(LEXICONS) $(EXTRAS) $(TESTS) $(PERLD)/Makefile locale_ok $(PERLLIB)/Languages.pm $(PERLLIB)/Languages/*.pm $(SHARE)/focail?.bs $(PERLD)/META.yml

# assumes lexicon-xx.txt is in place and more recent that the .bs
rebuildlex : FORCE
	rm -f lexicon-$(TEANGA).bs
	cat lexicon-$(TEANGA).txt | LC_ALL="C" $(PERL) $(GRAMDIR)/cabhair.pl -c --encoding=$(NATIVE) > lexicon-$(TEANGA).bs

dist : FORCE
	$(MAKE) lexicon-$(TEANGA).txt  # so next line won't kill .bs
	$(MAKE) rebuildlex
	$(LN_S) `pwd` ../$(TARBALL)
	LC_ALL="C" $(PERL) -p -i -e 's/^#!.*/#!!PERLPATH!/' macra-$(TEANGA).meta.pl
	rm -f Makefile  # previous line means need reconfig
	tar cvhf $(TARBALL).tar -C .. $(TARBALL)/Changes
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/configure
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/COPYING
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/README
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/3grams-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/aonchiall-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/comhshuite-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/earraidi-$(TEANGA).bs
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/eile-$(TEANGA).bs
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/eisceacht-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/freq-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/giorr-$(TEANGA).pre
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/giorr-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/lexicon-$(TEANGA).bs
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/macra-$(TEANGA).meta.pl
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/morph-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/nocombo-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/pos-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/rialacha-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/triail.xml
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/unigram-$(TEANGA).pre
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/unigram-$(TEANGA).txt
	gzip $(TARBALL).tar
	chmod 444 $(TARBALL).tar.gz
	rm -f ../$(TARBALL)

counts : FORCE
	(cat lexicon-$(TEANGA).bs | wc -l; $(ECHO) '2 / p') | dc
	cat eile-$(TEANGA).bs | wc -l
	$(EGREP) '^[^#]' comhshuite-$(TEANGA).in | wc -l
	$(EGREP) '^[^#]' aonchiall-$(TEANGA).in | wc -l
	$(EGREP) '^[^#]' rialacha-$(TEANGA).in | wc -l
	$(EGREP) '^[^#]' eisceacht-$(TEANGA).in | wc -l

zipped : perl
	(cd $(PERLD); make zipdist)

FORCE :
