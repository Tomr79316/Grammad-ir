# Copyright (C) 2003, 2004 Kevin P. Scannell <scannell@slu.edu>
#
# This is free software; see the file COPYING for copying conditions.  There is
# NO warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#

SHELL = /bin/sh

.SUFFIXES: .in .pl

# general configuration
ECHO = !ECHO!
EGREP = !EGREP!
LN_S = !LN_S!
PERL = !PERL!

# package configuration
GRAMDIR = !GRAMDIR!
TEANGA = !TEANGA!
UPPERTEANGA = !UPPERTEANGA!
NAME_ENG = !NAME_ENG!
VERSION = !VERSION!
GRAMVERSION = !GRAMVERSION!
PACKAGE_NAME = gramadoir-$(TEANGA)
TARBALL = gramadoir-$(TEANGA)-$(VERSION)
PERLVERSION = $(VERSION)
PERLD = Lingua-$(UPPERTEANGA)-Gramadoir
PERLLIB = $(PERLD)/lib/Lingua/$(UPPERTEANGA)/Gramadoir
SHARE = $(PERLD)/share
NATIVE = !NATIVE!
BDCHARS = !BDCHARS!
INTCHARS = !INTCHARS!
CAPITALS = !UPPERS!
LOWERS = !LOWERS!
AUTHOR = !AUTHOR!

# targets '
SCRIPTNAME = gram-${TEANGA}.pl
DEVSCRIPTNAME = gramdev-${TEANGA}.pl
PERLTOP = $(PERLD)/Changes $(PERLD)/Makefile.PL $(PERLD)/MANIFEST $(PERLD)/MANIFEST.SKIP $(PERLD)/README
PERLCODE = $(PERLD)/scripts/$(SCRIPTNAME) $(PERLLIB).pm
LEXICONS = $(SHARE)/3grams.bs $(SHARE)/earraidi.bs $(SHARE)/eile.bs $(SHARE)/focail0.bs $(SHARE)/nocombo.bs $(SHARE)/pos.bs
EXTRAS = $(SHARE)/gramadoir.el $(SHARE)/gramadoir.vim
TESTS = $(PERLD)/t/$(PERLD).t
LOCALES = locale_ok $(PERLLIB)/Languages.pm $(PERLLIB)/Languages/en_us.pm
INTERMEDIATE = morph-$(TEANGA).pl aonchiall-$(TEANGA).pl comhshuite-$(TEANGA).pl eisceacht-$(TEANGA).pl giorr-$(TEANGA).pl rialacha-$(TEANGA).pl unigram-$(TEANGA).pl

all : perl gramdev-$(TEANGA).pl

$(PERLD) :
	mkdir ${PERLD}
	mkdir ${PERLD}/lib
	mkdir ${PERLD}/lib/Lingua
	mkdir ${PERLD}/lib/Lingua/${UPPERTEANGA}
	mkdir ${PERLD}/lib/Lingua/${UPPERTEANGA}/Gramadoir
	mkdir ${PERLD}/lib/Lingua/${UPPERTEANGA}/Gramadoir/Languages
	mkdir ${PERLD}/scripts
	mkdir ${PERLD}/share
	mkdir ${PERLD}/t

perldb : FORCE $(PERLD)
	(cd $(PERLD); if [ -e Makefile ]; then make distclean; fi)
	$(MAKE) perl

perl : $(PERLTOP) $(PERLCODE) $(LEXICONS) $(EXTRAS) $(TESTS) $(LOCALES) $(PERLD)/Makefile
	(cd $(PERLD); make)

$(PERLD)/Makefile : $(PERLD)/Makefile.PL
	(cd $(PERLD); perl Makefile.PL)

test : perl
	(cd $(PERLD); make test)

install : perl
	(cd $(PERLD); make pure_install)

installcheck : triail FORCE
	@LC_ALL=ga_IE $(SCRIPTNAME) --api --iomlan --aspell triail > triail.tmp.xml
	@if diff triail.xml triail.tmp.xml; then $(ECHO) 'OK.'; else $(ECHO) 'Problem.'; fi
	@rm -f triail.tmp.xml

lexicon-$(TEANGA).txt : lexicon-$(TEANGA).bs
	cat lexicon-$(TEANGA).bs | $(PERL) $(GRAMDIR)/cabhair.pl -d --encoding=$(NATIVE) > $@

$(PERLD)/Changes : Changes $(PERLD)
	cp -f Changes $@
	chmod 644 $@

$(PERLD)/Makefile.PL : $(GRAMDIR)/Makefile.PL.in $(PERLD)
	cat $(GRAMDIR)/Makefile.PL.in | sed "s/@TEANGA@/$(UPPERTEANGA)/g; s/@LOWERTEANGA@/$(TEANGA)/g" > $@
	if echo "$(NATIVE)" | $(EGREP) -i 'utf' > /dev/null; \
	then \
		sed -i '/#.*binmode/s/#//g' $@; \
	else \
		sed -i '/^#.*binmode/d' $@; \
	fi
	chmod 644 $@

$(PERLD)/MANIFEST : $(GRAMDIR)/MANIFEST $(PERLD)
	cat $(GRAMDIR)/MANIFEST | sed "s/@TEANGA@/$(TEANGA)/; s/@UPPERTEANGA@/$(UPPERTEANGA)/" > $@
	chmod 644 $@

$(PERLD)/MANIFEST.SKIP : $(GRAMDIR)/MANIFEST.SKIP $(PERLD)
	cp -f $(GRAMDIR)/MANIFEST.SKIP $@
	chmod 644 $@

$(PERLD)/META.yml : perl
	(cd $(PERLD); make metafile)

$(PERLD)/README : $(GRAMDIR)/README.perl $(PERLD)
	sed "s/@UPPERTEANGA@/$(UPPERTEANGA)/; s/@TEANGA@/$(TEANGA)/; s/@VERSION@/$(VERSION)/; s/@GRAMVERSION@/$(GRAMVERSION)/; s/@NAME_ENG@/$(NAME_ENG)/; /^Copyright (C)/s/.*/&\n                   $(AUTHOR)/" $(GRAMDIR)/README.perl > $@
	chmod 644 $@

$(PERLD)/scripts/$(SCRIPTNAME) : $(GRAMDIR)/gram.pl $(PERLD)
	cat $(GRAMDIR)/gram.pl | sed "s/@SCRIPTNAME@/$(SCRIPTNAME)/; s/@PACKAGE_VERSION@/$(PERLVERSION)/; s/@TEANGA@/$(UPPERTEANGA)/g; s/@NATIVE@/$(NATIVE)/g; s/@NAME_ENGLISH@/$(NAME_ENG)/g; /^Copyright (C)/s/.*/&\n                   $(AUTHOR)/" > $@
	chmod 644 $@

$(SHARE)/3grams.bs : 3grams-$(TEANGA).txt $(PERLD)
	cp 3grams-$(TEANGA).txt $@
	chmod 644 $@

$(SHARE)/earraidi.bs : earraidi-$(TEANGA).bs $(PERLD)
	cp earraidi-$(TEANGA).bs $@
	chmod 644 $@

$(SHARE)/eile.bs : eile-$(TEANGA).bs $(PERLD)
	cp eile-$(TEANGA).bs $@
	chmod 644 $@

$(SHARE)/nocombo.bs : nocombo-$(TEANGA).txt $(PERLD)
	cp nocombo-$(TEANGA).txt $@
	chmod 644 $@

$(SHARE)/pos.bs : pos-$(TEANGA).txt $(PERLD)
	cp pos-$(TEANGA).txt $@
	chmod 644 $@

$(SHARE)/gramadoir.el : $(GRAMDIR)/gramadoir.el $(PERLD)
	sed "s/gram-ga\.pl/$(SCRIPTNAME)/g" $(GRAMDIR)/gramadoir.el > $@

$(SHARE)/gramadoir.vim : $(GRAMDIR)/gramadoir.vim $(PERLD)
	sed "s/gram-ga\.pl/$(SCRIPTNAME)/g" $(GRAMDIR)/gramadoir.vim > $@

$(PERLD)/t/$(PERLD).t : $(GRAMDIR)/Lingua-XX-Gramadoir.t triail $(PERLD)
	cat $(GRAMDIR)/Lingua-XX-Gramadoir.t | sed "s/@TEANGA@/$(UPPERTEANGA)/g; s/@NATIVE@/$(NATIVE)/g; s/tests => 1;/tests => 4+`cat triail.xml | wc -l`;/" > $@
	sed -i "/<<.EOF.;/r triail" $@
	sed -i '/<<.RESEOF.;/r triail.xml' $@
	chmod 644 $@

triail : rialacha-$(TEANGA).in
	sed -n '/^#\./{s/^#\. //; p}' rialacha-$(TEANGA).in > triail

triail.xml-update : FORCE
	$(MAKE) triail
	$(MAKE) perl
	rm -f triail.xml
	LC_ALL=ga_IE $(SCRIPTNAME) --api --iomlan --aspell triail > triail.xml

# last line (subst of \x{} codes) is a hack for legacy encodings w/ 5.8.0
$(PERLLIB).pm : $(GRAMDIR)/Gramadoir.pm.in $(INTERMEDIATE) $(PERLD)
	sed "/^# morphology code /r morph-$(TEANGA).pl" $(GRAMDIR)/Gramadoir.pm.in > $@
	sed -i "/^# aonchiall code /r aonchiall-$(TEANGA).pl" $@
	sed -i "/^# comhshuite code /r comhshuite-$(TEANGA).pl" $@
	sed -i "/^# eisceacht code /r eisceacht-$(TEANGA).pl" $@
	sed -i "/^# giorr code /r giorr-$(TEANGA).pl" $@
	sed -i "/^# rialacha code /r rialacha-$(TEANGA).pl" $@
	sed -i "/^# unigram code /r unigram-$(TEANGA).pl" $@
	sed -i "s/@PACKAGE_VERSION@/$(PERLVERSION)/" $@
	sed -i "s/@TEANGA@/$(UPPERTEANGA)/g" $@
	sed -i "s/@NAME_ENGLISH@/$(NAME_ENG)/g" $@
	sed -i "s/@NATIVE@/$(NATIVE)/g" $@
	sed -i "s/@BDCHARS@/$(BDCHARS)/g" $@
	sed -i "s/@INTCHARS@/$(INTCHARS)/g" $@
	sed -i "s/@CAPITALS@/$(CAPITALS)/g" $@
	sed -i "s/@LOWERS@/$(LOWERS)/g" $@
	sed -i '/^# [a-z]* code goes here/d' $@
	sed -i "/^Copyright (C)/s/.*/&\n                   $(AUTHOR)/" $@
	if echo "$(NATIVE)" | $(EGREP) -i 'utf' > /dev/null; \
	then \
		perl -i -p -e 'if (m/^use warnings/) {s/(.*)/$${1}\nuse utf8;/;} if (m/decode\(/) {s/^/#/;} if (m/eval.*from_to/) {s/^(.*from_to\(([^,]+), *([^,]+),.*)/#$${1}\n\teval {$$2 = decode($$3, $$2) };/}' $@; \
	else \
		perl -i -p -e 's/([\x{80}-\x{ff}])/sprintf("\\x{%x}",ord($$1));/ge;' $@; \
	fi
	chmod 644 $@

morph-$(TEANGA).pl : morph-$(TEANGA).txt
	cat morph-$(TEANGA).txt | sed '/^#/d' | sed '/^$$/d' | sed 's/#.*$$//' | sed 's#^\([^\t ]*\)[ \t]*\([^\t ]*\)[ \t]*\([^\t ]*\)#\tif ( $$current =~ m/\1/ ) {\n\t\t($$newcurrent = $$current) =~ s/\1/"\2"/e;\n\t\t$$ans = $$self->tag_recurse($$original, $$newcurrent, ($$level > \3) ? $$level : \3);\n\t\treturn $$ans if $$ans;\n\t}\n#' | sed 's/""""/""/' | sed 's/\\[Ll]\$$\([1-9]\)/".mylc($$\1)."/g' > $@

$(PERLLIB)/Languages.pm : $(GRAMDIR)/Languages.pm $(PERLD)
	sed "s/@TEANGA@/$(UPPERTEANGA)/g" $(GRAMDIR)/Languages.pm > $@

$(PERLLIB)/Languages/en_us.pm : $(GRAMDIR)/Languages-en_us.pm $(PERLD)
	sed "s/@TEANGA@/$(UPPERTEANGA)/g" $(GRAMDIR)/Languages-en_us.pm > $@

locale_ok : $(PERLD)
	cat $(GRAMDIR)/po/LINGUAS | tr " " "\n" | $(EGREP) '[a-z]' | while read x; do perl $(GRAMDIR)/po2perl.pl $(GRAMDIR)/po/$${x}.po "$${x}" > pometa-$${x}.tmp; cat pometa-$${x}.tmp | iconv -f `$(EGREP) '^"Content-Type:' $(GRAMDIR)/po/$${x}.po | sed 's/^.*charset *= *\([^ ]*\)\\\n.*/\1/'`  -t utf-8 > $(PERLLIB)/Languages/$${x}.pm; sed -n '1,/^"Content-Transfer-Encoding/{/^[^#]/s/^/#/; p;}' $(GRAMDIR)/po/$${x}.po > pometa-$${x}.tmp; sed -i "/^package/r pometa-$${x}.tmp" $(PERLLIB)/Languages/$${x}.pm; done
	sed -i "s/@TEANGA@/$(UPPERTEANGA)/g" $(PERLLIB)/Languages/*.pm
	rm -f pometa*.tmp
	touch locale_ok

.in.pl :
	cat "$<" | sed '/^#/!s/:/~:/' | tr "~" "\n" | LC_ALL="C" $(PERL) -n $(GRAMDIR)/gin.meta.pl | LC_ALL="C" $(PERL) -p macra-${TEANGA}.meta.pl | LC_ALL="C" $(PERL) -p $(GRAMDIR)/`echo $< | sed 's/-.*//'`.meta.pl | sed 's/^/\t/' > $@

giorr-$(TEANGA).pl : giorr-$(TEANGA).txt giorr-$(TEANGA).pre
	(cat giorr-$(TEANGA).pre | $(EGREP) '^s/' | sed 's/^/\t/'; cat giorr-$(TEANGA).txt | sed 's/ .*//' | sed 's/.*/\ts\/([^@BDCHARS@@INTCHARS@]&)\\.\/$$1\\\\.\/g;/') > $@

unigram-$(TEANGA).pl : unigram-$(TEANGA).pre unigram-$(TEANGA).txt
	(cat unigram-$(TEANGA).pre | $(EGREP) '^s/' | sed 's/^/\t/'; cat unigram-$(TEANGA).txt | sed 's/^\(<\([A-Z]\)[^>]*\)>/\ts\/<B><Z>(?:<[^>]*>)*\1.>(?:<[^>]*>)*<\\\/Z>([^<]+)<\\\/B>\/\1>$$1<\\\/\2>\/g;/') > $@

$(SHARE)/focail0.bs : lexicon-$(TEANGA).txt freq-$(TEANGA).txt $(PERLD)
	bash $(GRAMDIR)/lexbuild $(TEANGA) $(GRAMDIR) $(NATIVE)

gramdev-$(TEANGA).pl : $(GRAMDIR)/gramdev.pl
	cat $(GRAMDIR)/gramdev.pl | sed "s/@SCRIPTNAME@/$(DEVSCRIPTNAME)/; s/@PACKAGE_VERSION@/$(PERLVERSION)/; s/@TEANGA@/$(UPPERTEANGA)/g; s/@NATIVE@/$(NATIVE)/g; s/@NAME_ENGLISH@/$(NAME_ENG)/g; /^Copyright (C)/s/.*/&\n                   $(AUTHOR)/; s/@BDCHARS@/$(BDCHARS)/; s/@INTCHARS@/$(INTCHARS)/" > $@
	if echo "$(NATIVE)" | $(EGREP) -i 'utf' > /dev/null; \
	then \
		sed -i '/^use warnings/s/.*/&\nuse utf8;/' $@; \
	else \
		perl -i -p -e 's/([\x{80}-\x{ff}])/sprintf("\\x{%x}",ord($$1));/ge;' $@; \
	fi
	chmod 755 $@

poncin : FORCE
	@cd $(GRAMDIR) && make all
	@$(ECHO) 'Checking aonchiall-$(TEANGA).in'
	@cat aonchiall-$(TEANGA).in | $(GRAMDIR)/aparser
	@$(ECHO) 'Checking eisceacht-$(TEANGA).in'
	@cat eisceacht-$(TEANGA).in | $(GRAMDIR)/eparser
	@$(ECHO) 'Checking rialacha-$(TEANGA).in'
	@cat rialacha-$(TEANGA).in | $(GRAMDIR)/rparser

topclean :
	rm -f lexicon-$(TEANGA).txt locale_ok $(INTERMEDIATE) *.tar.gz triail
	rm -f $(PERLTOP) $(PERLCODE) $(LEXICONS) $(EXTRAS) $(TESTS) $(PERLD)/Makefile

distclean :
	$(MAKE) topclean
	rm -f Makefile
	rm -fR $(PERLD)

clean :
	$(MAKE) topclean

rebuildlex : FORCE
	rm -f lexicon-$(TEANGA).bs
	cat lexicon-$(TEANGA).txt | $(PERL) $(GRAMDIR)/cabhair.pl -c --encoding=$(NATIVE) > lexicon-$(TEANGA).bs

dist : FORCE
	$(MAKE) rebuildlex
	$(LN_S) $(TEANGA) ../$(TARBALL)
	sed -i '1s/.*/#!!PERLPATH!/' macra-$(TEANGA).meta.pl
	tar cvhf $(TARBALL).tar -C .. $(TARBALL)/Changes
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/configure
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/COPYING
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/README
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/3grams-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/aonchiall-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/comhshuite-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/earraidi-$(TEANGA).bs
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/eile-$(TEANGA).bs
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/eisceacht-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/freq-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/giorr-$(TEANGA).pre
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/giorr-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/lexicon-$(TEANGA).bs
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/macra-$(TEANGA).meta.pl
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/morph-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/nocombo-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/pos-$(TEANGA).txt
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/rialacha-$(TEANGA).in
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/triail.xml
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/unigram-$(TEANGA).pre
	tar rvhf $(TARBALL).tar -C .. $(TARBALL)/unigram-$(TEANGA).txt
	gzip $(TARBALL).tar
	chmod 444 $(TARBALL).tar.gz
	rm -f ../$(TARBALL)

counts : FORCE
	(cat lexicon-$(TEANGA).bs | wc -l; echo '2 / p') | dc
	cat eile-$(TEANGA).bs | wc -l
	$(EGREP) '^[^#]' comhshuite-$(TEANGA).in | wc -l
	$(EGREP) '^[^#]' aonchiall-$(TEANGA).in | wc -l
	$(EGREP) '^[^#]' rialacha-$(TEANGA).in | wc -l
	$(EGREP) '^[^#]' eisceacht-$(TEANGA).in | wc -l

zipped : FORCE
	(cd Lingua-$(UPPERTEANGA)-Gramadoir; make realclean)
	zip -r Lingua-$(UPPERTEANGA)-Gramadoir Lingua-$(UPPERTEANGA)-Gramadoir
	mv -f Lingua-$(UPPERTEANGA)-Gramadoir.zip $(HOME)/public_html

FORCE :
