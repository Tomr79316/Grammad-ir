#!/bin/bash
#
#   eventually this script will go away when I build the 
#   perl module directly from the .in files w/o doing the
#   .pl files as a separate step.
#
#   Or said better, these transformations will be composed/combined
#   with the ones currently in the makefile.
#
#   Two arguments; first is the iso-639 code for the language and 
#   the second is the name of the language in English for use in 
#   the plain text docs.   Should fit into this phrase:
#   "NLP tools for the ${2} language"
if [ $# -ne 5 ]
then
	echo "Usage: buildperl xx name_english [y|n] [native|utf8] VERSION"
	echo "   y iff the hash tables should be rebuilt/reinstalled"
	echo "You should be using this via the makefile target \"perl\" or \"perldb\"."
	exit 1
fi
if echo "${1}" | grep '[A-Z]' > /dev/null
then
	echo "The ISO-639 code should be given in lowercase"
	echo "You should be using this via the makefile target \"perl\" or \"perldb\"."
	exit 1
fi
PERLVERSION=`echo "${5}" | sed 's/$/0/'`  # gramadoir-0.5 -> GA::Gramadoir-0.50
TEANGA="${1}"
UPPERTEANGA=`echo "${TEANGA}" | tr "[:lower:]" "[:upper:]"`
NATIVE=`grep "^${TEANGA} " TEANGACHA | sed "s/^${TEANGA}  *\([^ ]*\).*/\1/"`
TARGET=${NATIVE}
if [ "${4}" = "utf8" ]
then
	TARGET="utf8"
	sed -i '/#.*binmode/s/#//g' Lingua-${UPPERTEANGA}-Gramadoir/Makefile.PL
else
	sed -i '/^[^#]*binmode/s/^/#/' Lingua-${UPPERTEANGA}-Gramadoir/Makefile.PL
fi
CHARSPEC=`grep "^${TEANGA} " TEANGACHA | sed "s/^${TEANGA}  *[^ ]*  *//"`
BDCHARS=`echo "${CHARSPEC}" | sed "s/ .*//" | iconv -f "${NATIVE}" -t "${TARGET}"`
INTCHARS=`echo "${CHARSPEC}" | sed "s/^[^ ]*  *\([^ ]*\) .*/\1/" | iconv -f "${NATIVE}" -t "${TARGET}"`
REST=`echo "${CHARSPEC}" | sed "s/^[^ ]*  *[^ ]*  *//"`
CAPITALS=`echo "${REST}" | sed 's/ .*//'`
LOWERS=`echo "${REST}" | sed 's/^[^ ]*  *//'`

#  perl scripts to be inserted into Gramadoir.pm...
MOIRFEOLAIOCHT=`mktemp`
AONCHIALL=`mktemp`
COMHSHUITE=`mktemp`
EISCEACHT=`mktemp`
GIORR=`mktemp`
RIALACHA=`mktemp`
UNIGRAM=`mktemp`
cat morph-${TEANGA}.txt | sed '/^#/d' | sed '/^$/d' | sed 's/#.*$//' | sed 's#^\([^\t ]*\)[ \t]*\([^\t ]*\)[ \t]*\([^\t ]*\)#\tif ( $current =~ m/\1/ ) {\n\t\t($newcurrent = $current) =~ s/\1/"\2"/e;\n\t\t$ans = $self->tag_recurse($original, $newcurrent, ($level > \3) ? $level : \3);\n\t\treturn $ans if $ans;\n\t}\n#' | sed 's/""""/""/' | sed 's/\\[Ll]\$\([1-9]\)/".mylc($\1)."/g' | iconv -f "${NATIVE}" -t "${TARGET}" > ${MOIRFEOLAIOCHT}
cat aonchiall-${TEANGA}.pl | egrep '^s/' | sed 's/^/\t/' | iconv -f "${NATIVE}" -t "${TARGET}" > ${AONCHIALL}
cat comhshuite-${TEANGA}.pl | egrep '^s/' | sed 's/^/\t/' | iconv -f "${NATIVE}" -t "${TARGET}" > ${COMHSHUITE}
cat eisceacht-${TEANGA}.pl | egrep '^s/' | sed 's/^/\t/' | iconv -f "${NATIVE}" -t "${TARGET}" > ${EISCEACHT}
cat giorr-${TEANGA} | tr -d '\t' | egrep '^s/' | sed 's/^/\t/' | sed 's/\$charset/@BDCHARS@@INTCHARS@/g' | iconv -f "${NATIVE}" -t "${TARGET}" > ${GIORR}
cat rialacha-${TEANGA}.pl | egrep '^s/' | sed 's/^/\t/' | iconv -f "${NATIVE}" -t "${TARGET}" > ${RIALACHA}
cat unigram-${TEANGA}.pl | egrep '^s/' | sed 's/^/\t/' | iconv -f "${NATIVE}" -t "${TARGET}" > ${UNIGRAM}

# ensure these are rebuilt upon "perl Makefile.PL" below
if [ "${3}" = "y" ]
then
	find "Lingua-${UPPERTEANGA}-Gramadoir" -name '*.hash' | xargs rm -f
fi

# Makefile.PL
sed -i "s/@TEANGA@/${UPPERTEANGA}/g" Lingua-${UPPERTEANGA}-Gramadoir/Makefile.PL

# 3grams.bs
egrep '[0-9][0-9]' /usr/local/share/crubadan/${TEANGA}/3GRAMS | sed 's/ *\([0-9]*\) \(.*\)/\2 \1/' | iconv -f "${NATIVE}" -t "${TARGET}" > Lingua-${UPPERTEANGA}-Gramadoir/share/3grams.bs

# pos.txt
LEXICON="Lingua-${UPPERTEANGA}-Gramadoir/share/pos.bs"
rm -f ${LEXICON}
cat pos-${TEANGA}.txt | iconv -f "${NATIVE}" -t "${TARGET}" > ${LEXICON}
chmod 444 ${LEXICON}

if [ ${3} = "y" ]
then
make cabhair
FOCAILTEMP=`mktemp`
cat FOCAIL-ga.all | perl -e '
my %freqhash;
open (FREQ, "$ARGV[0]");
while(<FREQ>){
chomp($_);
my ($freq,$word) = split;
$freqhash{$word} = $freq;
}
while (<STDIN>) {
	my $line = $_;
	chomp;
	s/ .*//;
	my $ans = $freqhash{$_};
	if (defined $ans) {
		print "$ans $line";
	}
	else {
		print "0 $line";
	}
}
' /usr/local/share/crubadan/${TEANGA}/FREQ | sort -n -r > ${FOCAILTEMP}
egrep '^0' ${FOCAILTEMP} | sed 's/^0 //' > focail6-${TEANGA}.bs.pre
egrep '^1 ' ${FOCAILTEMP} | sed 's/^1 //' > focail5-${TEANGA}.bs.pre
sed -i '/^[01] /d' ${FOCAILTEMP}
sed -i 's/^[0-9]* //' ${FOCAILTEMP}
TOTALLINES=`wc -l ${FOCAILTEMP} | sed 's/ .*//'`
CHUNK=$(($TOTALLINES / 5))
LINENUM=1
NEXTLINE=1
rm -f focail?-${TEANGA}.bs
for FILENUM in 0 1 2 3 4
do
	FILENAME=focail${FILENUM}-${TEANGA}.bs.pre
	NEXTLINE=$(($LINENUM + $CHUNK))
	sed -n "${LINENUM},${NEXTLINE}p" ${FOCAILTEMP} >> ${FILENAME}
	PREV=`sed -n "${NEXTLINE}p" ${FOCAILTEMP} | sed 's/ .*//'`
	LINENUM=$((${NEXTLINE}+1))
	sed -n "${LINENUM},$((${NEXTLINE}+20))p" ${FOCAILTEMP} |
	while read x
	do
		WORD=`echo "${x}" | sed 's/ .*//'`	
		if [ ${PREV} = ${WORD} ]
		then
			echo "${x}" >> ${FILENAME}
		else
			echo "${x}" >> focail$((${FILENUM}+1))-${TEANGA}.bs.pre
		fi
	done
	LINENUM=$((${NEXTLINE}+21))
done
for FILENUM in 0 1 2 3 4 5 6
do
	TARGETFILE="Lingua-${UPPERTEANGA}-Gramadoir/share/focail${FILENUM}.bs"
	rm -f ${TARGETFILE}
	cat focail${FILENUM}-${TEANGA}.bs.pre | LC_COLLATE=POSIX sort -u -k1,1 -k2,2n | ./cabhair 0 > focail${FILENUM}-${TEANGA}.bs
	rm -f focail${FILENUM}-${TEANGA}.bs.pre
	cat focail${FILENUM}-${TEANGA}.bs | 
	if [ "${TARGET}" = "utf8" ]
	then
	perl -e '
	use Encode;
	# convert only word lines, not grammatical bytes!
	binmode(STDIN);
	local $/ = "\cJ";
	while (<STDIN>) {
	print Encode::encode( "utf8", $_ );
	my $next=<STDIN>;
	print $next;
	}
	' 
	else
		cat
	fi > ${TARGETFILE}
	chmod 444 ${TARGETFILE}
done
rm -f ${FOCAILTEMP}
fi

# nocombo.bs
LEXICON="Lingua-${UPPERTEANGA}-Gramadoir/share/nocombo.bs"
rm -f ${LEXICON}
cat nocombo-${TEANGA}.txt | iconv -f "${NATIVE}" -t "${TARGET}" > ${LEXICON}
chmod 444 ${LEXICON}

# eile.bs
LEXICON="Lingua-${UPPERTEANGA}-Gramadoir/share/eile.bs"
rm -f ${LEXICON}
cat eile-${TEANGA}.bs | sed '1d' | iconv -f "${NATIVE}" -t "${TARGET}" > ${LEXICON}
chmod 444 ${LEXICON}

# earraidi.bs
LEXICON="Lingua-${UPPERTEANGA}-Gramadoir/share/earraidi.bs"
rm -f ${LEXICON}
cat earraidi-${TEANGA}.bs | iconv -f "${NATIVE}" -t "${TARGET}" > ${LEXICON}
chmod 444 ${LEXICON}

# Languages for Localization
LANGPREFIX="Lingua-${UPPERTEANGA}-Gramadoir/lib/Lingua/${UPPERTEANGA}/Gramadoir/Languages"
rm -f ${LANGPREFIX}/*.pm
POMETA=`mktemp`
cat po/LINGUAS | tr " " "\n" | egrep '[a-z]' |
while read x
do
	POENCODE=`egrep '^"Content-Type:' po/${x}.po | sed 's/^.*charset *= *\([^ ]*\)\\\n.*/\1/'`
	perl ./po2perl.pl po/${x}.po "${x}" 1> ${POMETA} 2> /dev/null
	cat "${POMETA}" | iconv -f "${POENCODE}" -t utf-8 > ${LANGPREFIX}/${x}.pm
	sed -n '1,/^"Content-Transfer-Encoding/{/^[^#]/s/^/#/; p;}' po/${x}.po > ${POMETA}
	sed -i "/^package/r ${POMETA}" ${LANGPREFIX}/${x}.pm
done
cp -f Languages.pm ${LANGPREFIX}.pm
cp -f Languages-en_us.pm ${LANGPREFIX}/en_us.pm
sed -i "s/@TEANGA@/${UPPERTEANGA}/g" ${LANGPREFIX}.pm ${LANGPREFIX}/*.pm
rm -f $POMETA

# Gramadoir.pm target
MODULE="Lingua-${UPPERTEANGA}-Gramadoir/lib/Lingua/${UPPERTEANGA}/Gramadoir.pm"
rm -f "${MODULE}"
cat 'Gramadoir.pm.in' |
sed "
/^# morphology code goes here/r ${MOIRFEOLAIOCHT}
/^# aonchiall code goes here/r ${AONCHIALL}
/^# comhshuite code goes here/r ${COMHSHUITE}
/^# eisceacht code goes here/r ${EISCEACHT}
/^# giorr code goes here/r ${GIORR}
/^# rialacha code goes here/r ${RIALACHA}
/^# unigram code goes here/r ${UNIGRAM}
" | 
sed "s/@PACKAGE_VERSION@/${PERLVERSION}/" |
sed "s/@TEANGA@/${UPPERTEANGA}/g" |
sed "s/@NAME_ENGLISH@/${2}/g" |
sed "s/@NATIVE@/${NATIVE}/g" |
sed "s/@BDCHARS@/${BDCHARS}/g" |
sed "s/@INTCHARS@/${INTCHARS}/g" |
sed "s/@CAPITALS@/${CAPITALS}/g" |
sed "s/@LOWERS@/${LOWERS}/g" |
sed '/^# [a-z]* code goes here/d' |
sed '
s/Á/\\x{c1}/g
s/É/\\x{c9}/g
s/Í/\\x{cd}/g
s/Ó/\\x{d3}/g
s/Ú/\\x{da}/g
s/á/\\x{e1}/g
s/é/\\x{e9}/g
s/í/\\x{ed}/g
s/ó/\\x{f3}/g
s/ú/\\x{fa}/g
' > "${MODULE}"
chmod 444 "${MODULE}"

# gram-xx.pl target
SCRIPT="Lingua-${UPPERTEANGA}-Gramadoir/scripts/gram-${TEANGA}.pl"
rm -f "${SCRIPT}"
cat gram.pl |
sed "s/@PACKAGE_VERSION@/${PERLVERSION}/" |
sed "s/@TEANGA@/${UPPERTEANGA}/g" |
sed "s/@NATIVE@/${NATIVE}/g" |
sed "s/@NAME_ENGLISH@/${2}/g" > "${SCRIPT}"
chmod 444 "${SCRIPT}"

# Makefile.PL target
SCRIPT="Lingua-${UPPERTEANGA}-Gramadoir/Makefile.PL"
rm -f "${SCRIPT}"
cat 'Makefile.PL.in' |
sed "s/@TEANGA@/${UPPERTEANGA}/g" |
sed "s/@LOWERTEANGA@/${TEANGA}/g" > "${SCRIPT}"
chmod 444 "${SCRIPT}"

# extras
cp gramadoir.el Lingua-${UPPERTEANGA}-Gramadoir/share
cp gramadoir.vim Lingua-${UPPERTEANGA}-Gramadoir/share

# including raw cvs logs for files not in the dist is pretty stupid.
# cvs2cl.pl -l "-d '2004-06-01<'" -f Lingua-${UPPERTEANGA}-Gramadoir/Changes *-ga*
make CHANGES
cp CHANGES Lingua-${UPPERTEANGA}-Gramadoir


# t/triail.xml target
#   shouldn't remake everytime -- want to compare with a static baseline!
# make triail.xml
TESTS=`cat triail.xml | wc -l`

# t/Lingua-XX-Gramadoir.t target
SCRIPT="Lingua-${UPPERTEANGA}-Gramadoir/t/Lingua-${UPPERTEANGA}-Gramadoir.t"
rm -f "${SCRIPT}"
cat Lingua-XX-Gramadoir.t | 
sed "s/@TEANGA@/${UPPERTEANGA}/g" |
sed "s/@NATIVE@/${NATIVE}/g" |
sed "s/tests => 1;/tests => $((${TESTS}+4));/" > ${SCRIPT}
sed -i "/<<.EOF.;/r triail" ${SCRIPT}
sed -i '/<<.RESEOF.;/r triail.xml' ${SCRIPT}
chmod 444 "${SCRIPT}"


# cleanup
rm -f ${AONCHIALL} ${COMHSHUITE} ${EISCEACHT} ${GIORR} ${RIALACHA} ${UNIGRAM} ${MOIRFEOLAIOCHT}

cd "Lingua-${UPPERTEANGA}-Gramadoir"
perl Makefile.PL
make
